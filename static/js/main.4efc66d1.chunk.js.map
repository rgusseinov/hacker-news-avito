{"version":3,"sources":["assets/logo.png","components/header/header.jsx","shared/utils/time.js","components/item/item.jsx","components/error/error.jsx","redux/selectors/news-selector.js","hooks/use-item-list.js","components/loader/content-loader.jsx","components/item-list/item-list.jsx","components/title/title.jsx","redux/actions/types.js","redux/actions/comments.js","shared/constants.js","shared/requests/item.js","shared/utils/comments.js","hooks/use-comments.js","components/comments/comment-item.jsx","components/comments/comment-list.jsx","components/comments/comments.jsx","redux/actions/single-news.js","redux/selectors/news-item-selector.js","components/single-news-item/single-news-item.jsx","hooks/use-news-item.js","shared/requests/news.js","hooks/use-news.js","redux/actions/news.js","App.js","reportWebVitals.js","redux/reducers/news.js","redux/reducers/news-item.js","redux/reducers/root-reducer.js","redux/store.js","index.js"],"names":["Header","className","to","src","Logo","alt","getNewsPostTime","time","between","Date","now","Number","pluralize","label","Item","item","postTime","score","href","url","target","rel","title","by","id","descendants","Error","newsSelector","createSelector","state","newsReducer","news","useItemList","useSelector","loading","isFail","newsArray","Object","values","ContentLoader","type","color","height","width","ItemList","map","Title","handleRefreshNews","onClick","LOAD_NEWS_START","LOAD_NEWS_SUCCESS","LOAD_NEWS_FAILURE","LOAD_NEWS_ITEM_SUCCESS","LOAD_NEWS_ITEM_FAILURE","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","addCommentsSuccess","payload","addCommentsFailure","baseURL","TIME_INTERVAL","getNewsItem","newsId","a","axios","get","response","data","buildCommentTree","comment","commentsById","toString","text","children","kids","kidId","getCommentsByIds","arrayOfKids","kid","Promise","all","kidsPromise","result","res","allKidsIds","forEach","concat","length","console","error","useParams","dispatch","useDispatch","timerRef","useRef","useState","setLoading","newsItemReducer","comments","isCommentsFailed","singleComment","loadCommentsPerMinute","requestComments","current","setInterval","useEffect","clearInterval","commentList","handleRefreshComments","commentsCount","postId","filter","parent","buildTree","CommentItem","commentPostTime","kidsShowed","setKidsShowed","dangerouslySetInnerHTML","__html","CommentList","Comments","useComments","addNewsItemSuccess","newsItemSelector","newsItem","SingleNewsItem","newsItems","isItemsFailed","singleItem","requestSignleNews","useNewsItem","getTopNews","newsLimit","newsIds","slice","useNews","loadNewsPerMinute","requestNews","newsList","topNewsIds","topNewsList","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","itemsObject","i","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4efc66d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.601fa4f1.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../scss/components/header.sass';\r\nimport Logo from '../../assets/logo.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"row header-row\">\r\n          <div className=\"logo\">\r\n            <Link to=\"/hacker-news-avito/\" className=\"logo-link\">\r\n              <img src={Logo} alt=\"Logo\" className=\"logo-img\" />\r\n              <span className=\"logo-text\"> Hacker News </span>\r\n            </Link>\r\n          </div>\r\n          <nav className=\"menu\"></nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export function getNewsPostTime(time) {\n  const between = Date.now() / 1000 - Number(time);\n  if (between < 3600) {\n    return pluralize(~~(between / 60), ' minute');\n  } else if (between < 86400) {\n    return pluralize(~~(between / 3600), ' hour');\n  } else {\n    return pluralize(~~(between / 86400), ' day');\n  }\n}\n\nfunction pluralize(time, label) {\n  if (time === 1) {\n    return time + label;\n  }\n  return time + label + 's';\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getNewsPostTime } from '../../shared/utils/time';\r\nimport '../../scss/components/item.sass';\r\n\r\nconst Item = ({ item }) => {\r\n  const postTime = getNewsPostTime(item.time);\r\n\r\n  return (\r\n    <div className=\"news-item\">\r\n      <div className=\"news-item__box-rating\">\r\n        <div className=\"rating up\">{item.score}</div>\r\n        <span>Points</span>\r\n      </div>\r\n      <div className=\"news-item__box-content\">\r\n        <a href={`${item.url}`} target=\"_blank\" rel=\"noreferrer\">\r\n          <h2> {item.title} </h2>\r\n        </a>\r\n        <div className=\"news-item__box-footer\">\r\n          <ul>\r\n            <li>\r\n              <i className=\"icon icon-user\"></i>\r\n              <span> {item.by} </span>\r\n            </li>\r\n            <li>\r\n              <Link to={`/item/${item.id}`}>\r\n                <i className=\"icon icon-comment\"></i>\r\n                <span>\r\n                  {' '}\r\n                  {item.descendants\r\n                    ? `${item.descendants} Comments`\r\n                    : `No comments yet`}{' '}\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <i className=\"icon icon-time\"></i>\r\n              <span> {postTime} ago</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"news-item__box-action\">\r\n        <a href={`${item.url}`} target=\"_blank\" rel=\"noreferrer\">\r\n          Open link\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../scss/components/error.sass';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <div className=\"container\">\r\n        <h1 className=\"error-title\">\r\n          <span>404</span> <br /> Ooops! Page not found\r\n        </h1>\r\n        <p className=\"error-text\">\r\n          This page does not exist or it is not unavailable\r\n        </p>\r\n        <Link to=\"/\" className=\"error-link\">\r\n          Go back to main page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { createSelector } from 'reselect';\n\nconst selectNewsState = (state) => state.newsReducer;\nexport const newsSelector = createSelector([selectNewsState], (news) => news);\n","import { useSelector } from 'react-redux';\nimport { newsSelector } from '../redux/selectors/news-selector';\n\nconst useItemList = () => {\n  const { news, loading, isFail } = useSelector(newsSelector);\n\n  const newsArray = Object.values(news);\n  return { newsArray, loading, isFail };\n};\n\nexport default useItemList;\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../../scss/components/loader.sass';\r\n\r\nconst ContentLoader = () => {\r\n  return (\r\n    <div className=\"content-loader\">\r\n      <Loader type=\"Oval\" color=\"#ed702d\" height={55} width={55} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React from 'react';\nimport Item from '../item/item';\nimport Error from '../error/error';\nimport useItemList from '../../hooks/use-item-list';\nimport ContentLoader from '../loader/content-loader';\n\nconst ItemList = () => {\n  const { newsArray, loading, isFail } = useItemList();\n  return (\n    <div className=\"item-list\">\n      {loading ? (\n        <ContentLoader />\n      ) : isFail ? (\n        <Error />\n      ) : (\n        newsArray.map((item) => <Item key={item.id} item={item} />)\n      )}\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\r\nimport '../../scss/components/title.sass';\r\n\r\nconst Title = ({ title, handleRefreshNews }) => {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter-label\">\r\n        <h4>{title}</h4>\r\n      </div>\r\n      <div className=\"filter-button\">\r\n        <button className=\"button\" onClick={handleRefreshNews}>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","export const LOAD_NEWS_START = 'LOAD_NEWS_START';\nexport const LOAD_NEWS_SUCCESS = 'LOAD_NEWS_SUCCESS';\nexport const LOAD_NEWS_FAILURE = 'LOAD_NEWS_FAILURE';\n\nexport const LOAD_NEWS_ITEM_SUCCESS = 'LOAD_NEWS_ITEM_SUCCESS';\nexport const LOAD_NEWS_ITEM_FAILURE = 'LOAD_NEWS_ITEM_FAILURE';\n\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n","import { LOAD_COMMENTS_FAILURE, LOAD_COMMENTS_SUCCESS } from './types';\n\nexport const addCommentsSuccess = (item) => ({\n  type: LOAD_COMMENTS_SUCCESS,\n  payload: item\n});\n\nexport const addCommentsFailure = () => ({\n  type: LOAD_COMMENTS_FAILURE\n});\n","export const baseURL = 'https://hacker-news.firebaseio.com/v0';\r\nexport const TIME_INTERVAL = 60000;\r\nexport const NEWS_LIMIT = 20;\r\n","import axios from 'axios';\nimport { baseURL } from '../constants';\n\nexport const getNewsItem = async (newsId) => {\n  const response = await axios.get(`${baseURL}/item/${newsId}.json`);\n  return response.data;\n};\n","import { getNewsItem } from '../requests/item';\r\n\r\nexport const buildTree = (comments, postId) => {\r\n  const commentsById = {};\r\n  comments.forEach((comment) => {\r\n    commentsById[comment.id] = comment;\r\n  });\r\n  const rootComments = comments.filter((comment) => {\r\n    return comment?.parent?.toString() === postId;\r\n  });\r\n  return rootComments.map((item) => buildCommentTree(item, commentsById));\r\n};\r\n\r\nexport const buildCommentTree = (comment, commentsById) => {\r\n  const result = {\r\n    id: comment.id.toString(),\r\n    text: comment.text,\r\n    by: comment.by,\r\n    time: comment.time,\r\n    children: comment.kids?.map((kidId) =>\r\n      buildCommentTree(commentsById[kidId], commentsById)\r\n    )\r\n  };\r\n  return result;\r\n};\r\n\r\nexport const getCommentsByIds = async (kids) => {\r\n  const arrayOfKids = kids.map((kid) => getNewsItem(kid));\r\n  const kidsPromise = await Promise.all(arrayOfKids);\r\n  const res = await Promise.all(kidsPromise.map((result) => result));\r\n\r\n  try {\r\n    let allKidsIds = [];\r\n    res.forEach((item) => {\r\n      allKidsIds = allKidsIds.concat(item?.kids || []);\r\n    });\r\n\r\n    if (!allKidsIds.length) return res;\r\n    const data = await getCommentsByIds(allKidsIds);\r\n    return data.concat(res);\r\n  } catch (err) {\r\n    console.error(`Что-то пошло не так: `, err);\r\n  }\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n  addCommentsFailure,\r\n  addCommentsSuccess\r\n} from '../redux/actions/comments';\r\nimport { TIME_INTERVAL } from '../shared/constants';\r\nimport { getNewsItem } from '../shared/requests/item';\r\nimport { buildTree, getCommentsByIds } from '../shared/utils/comments';\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const timerRef = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const { comments, isCommentsFailed } = useSelector(\r\n    (state) => state.newsItemReducer\r\n  );\r\n  const singleComment = comments[id];\r\n  const item = singleComment || [];\r\n\r\n  useEffect(() => {\r\n    if (singleComment) return;\r\n    loadCommentsPerMinute();\r\n    return () => clearInterval(timerRef);\r\n  }, [singleComment]);\r\n\r\n  async function loadCommentsPerMinute() {\r\n    await requestComments();\r\n\r\n    timerRef.current = setInterval(() => {\r\n      requestComments();\r\n    }, TIME_INTERVAL);\r\n  }\r\n\r\n  const requestComments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getNewsItem(id);\r\n      if (!response.kids) return [];\r\n\r\n      try {\r\n        const commentList = await getCommentsByIds(response.kids);\r\n        const payload = { id, item: commentList };\r\n        dispatch(addCommentsSuccess(payload));\r\n      } catch {\r\n        dispatch(addCommentsFailure());\r\n      }\r\n    } catch {\r\n      dispatch(addCommentsFailure());\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefreshComments = async () => {\r\n    clearInterval(timerRef.current);\r\n    await loadCommentsPerMinute();\r\n  };\r\n\r\n  const commentsCount = item?.length;\r\n\r\n  const commentList = buildTree(item, id);\r\n\r\n  return {\r\n    commentList,\r\n    loading,\r\n    isCommentsFailed,\r\n    commentsCount,\r\n    handleRefreshComments\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport CommentList from './comment-list';\r\nimport { getNewsPostTime } from '../../shared/utils/time';\r\n\r\nconst CommentItem = ({ comment }) => {\r\n  const commentPostTime = getNewsPostTime(comment.time);\r\n\r\n  const [kidsShowed, setKidsShowed] = useState(false);\r\n  const toggleComments = () => {\r\n    setKidsShowed(!kidsShowed);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"comment-author\">\r\n        <span className=\"name\">{comment.by}</span>\r\n        <span className=\"time\">{commentPostTime} ago</span>\r\n      </div>\r\n      <div\r\n        className=\"comment-text\"\r\n        dangerouslySetInnerHTML={{ __html: comment.text }}\r\n      ></div>\r\n      {comment.children?.length > 0 && (\r\n        <span\r\n          onClick={toggleComments}\r\n          className={\r\n            kidsShowed ? 'comment-toggle open' : 'comment-toggle close'\r\n          }\r\n        >\r\n          {kidsShowed ? `[-]` : `${comment.children?.length} replies collapsed`}\r\n        </span>\r\n      )}\r\n      {comment.children && kidsShowed && (\r\n        <CommentList commentList={comment.children} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React from 'react';\r\nimport CommentItem from './comment-item';\r\n\r\nfunction CommentList({ commentList }) {\r\n  return (\r\n    <div className=\"comments-wrap\">\r\n      {commentList.map((comment) => {\r\n        return <CommentItem key={comment.id} comment={comment} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentList;\r\n","import React from 'react';\r\nimport useComments from '../../hooks/use-comments';\r\nimport Error from '../error/error';\r\nimport CommentList from './comment-list';\r\nimport ContentLoader from '../loader/content-loader';\r\nimport '../../scss/components/comments.sass';\r\n\r\nconst Comments = () => {\r\n  const {\r\n    commentList,\r\n    loading,\r\n    isCommentsFailed,\r\n    commentsCount,\r\n    handleRefreshComments\r\n  } = useComments();\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <ContentLoader />\r\n      ) : (\r\n        <>\r\n          <div className=\"comments-header\">\r\n            <div>\r\n              <h2>\r\n                {commentsCount\r\n                  ? `${commentsCount} Comments`\r\n                  : `No comments yet`}\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <button className=\"button\" onClick={handleRefreshComments}>\r\n                Refresh\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {isCommentsFailed ? (\r\n            <Error />\r\n          ) : (\r\n            <CommentList commentList={commentList} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { LOAD_NEWS_ITEM_FAILURE, LOAD_NEWS_ITEM_SUCCESS } from './types';\n\nexport const addNewsItemSuccess = (item) => ({\n  type: LOAD_NEWS_ITEM_SUCCESS,\n  payload: item\n});\n\nexport const addNewsItemFailure = () => ({\n  type: LOAD_NEWS_ITEM_FAILURE\n});\n","import { createSelector } from 'reselect';\n\nconst selectNewsItemState = (state) => state.newsItemReducer;\nexport const newsItemSelector = createSelector(\n  [selectNewsItemState],\n  (newsItem) => newsItem\n);\n","import React from 'react';\r\nimport Error from '../error/error';\r\nimport Comments from '../comments/comments';\r\nimport useNewsItem from '../../hooks/use-news-item';\r\nimport ContentLoader from '../loader/content-loader';\r\nimport '../../scss/components/single-news.sass';\r\n\r\nconst SingleNewsItem = () => {\r\n  const { item, postTime, loading, isItemsFailed } = useNewsItem();\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <ContentLoader />\r\n      ) : isItemsFailed ? (\r\n        <Error />\r\n      ) : (\r\n        <>\r\n          <div className=\"single-news\">\r\n            <div className=\"single-news__header\">\r\n              <div className=\"row\">\r\n                <a href={item?.url}>\r\n                  <h1 className=\"title\">{item?.title}</h1>\r\n                </a>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"news-item__box-footer\">\r\n                  <ul className=\"news-meta\">\r\n                    <li>\r\n                      <i className=\"icon icon-rating\"></i>\r\n                      <span>{item?.score} points </span>\r\n                    </li>\r\n                    <li>\r\n                      <i className=\"icon icon-user\"></i>\r\n                      <span>{item?.by}</span>\r\n                    </li>\r\n                    <li>\r\n                      <i className=\"icon icon-time\"></i>\r\n                      <span>{postTime} ago</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"single-news__comments\">\r\n              <Comments />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleNewsItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n  addNewsItemSuccess,\r\n  addNewsItemFailure\r\n} from '../redux/actions/single-news';\r\nimport { newsItemSelector } from '../redux/selectors/news-item-selector';\r\nimport { getNewsItem } from '../shared/requests/item';\r\nimport { getNewsPostTime } from '../shared/utils/time';\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const { newsItems, isItemsFailed } = useSelector(newsItemSelector);\r\n  const singleItem = newsItems[id];\r\n  const { item } = singleItem || {};\r\n\r\n  useEffect(() => {\r\n    if (singleItem) return;\r\n    requestSignleNews();\r\n  }, [singleItem]);\r\n\r\n  const requestSignleNews = async () => {\r\n    try {\r\n      const item = await getNewsItem(id);\r\n      dispatch(addNewsItemSuccess(item));\r\n    } catch {\r\n      dispatch(addNewsItemFailure());\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const postTime = getNewsPostTime(item?.time);\r\n\r\n  return { item, postTime, loading, isItemsFailed };\r\n};\r\n","import axios from 'axios';\nimport { baseURL } from '../constants';\n\nexport const getTopNews = async (newsLimit) => {\n  const result = await axios.get(`${baseURL}/topstories.json`);\n  const newsIds = result.data.slice(0, newsLimit) || [];\n  return newsIds;\n};\n","import { useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  loadNewsFailure,\r\n  loadNewsStart,\r\n  loadNewsSuccess\r\n} from '../redux/actions/news';\r\nimport { NEWS_LIMIT, TIME_INTERVAL } from '../shared/constants';\r\nimport { getNewsItem } from '../shared/requests/item';\r\nimport { getTopNews } from '../shared/requests/news';\r\n\r\nconst useNews = () => {\r\n  const dispatch = useDispatch();\r\n  const timerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    requestNews();\r\n    loadNewsPerMinute();\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, []);\r\n\r\n  async function loadNewsPerMinute() {\r\n    await requestNews();\r\n\r\n    timerRef.current = setInterval(() => {\r\n      requestNews();\r\n    }, TIME_INTERVAL);\r\n  }\r\n\r\n  const requestNews = async () => {\r\n    try {\r\n      let newsList = [];\r\n      dispatch(loadNewsStart());\r\n\r\n      const topNewsIds = await getTopNews(NEWS_LIMIT);\r\n      newsList = topNewsIds.map((item) => getNewsItem(item));\r\n\r\n      const topNewsList = await Promise.all(newsList);\r\n      dispatch(loadNewsSuccess(topNewsList));\r\n    } catch {\r\n      dispatch(loadNewsFailure());\r\n    }\r\n  };\r\n\r\n  const handleRefreshNews = async () => {\r\n    clearInterval(timerRef.current);\r\n    await loadNewsPerMinute();\r\n  };\r\n\r\n  return handleRefreshNews;\r\n};\r\n\r\nexport default useNews;\r\n","import { LOAD_NEWS_FAILURE, LOAD_NEWS_START, LOAD_NEWS_SUCCESS } from './types';\n\nexport const loadNewsStart = () => ({\n  type: LOAD_NEWS_START\n});\n\nexport const loadNewsSuccess = (news) => ({\n  type: LOAD_NEWS_SUCCESS,\n  payload: news\n});\n\nexport const loadNewsFailure = () => ({\n  type: LOAD_NEWS_FAILURE\n});\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Header from './components/header/header';\r\nimport ItemList from './components/item-list/item-list';\r\nimport Title from './components/title/title';\r\nimport SingleNewsItem from './components/single-news-item/single-news-item';\r\nimport useNews from './hooks/use-news';\r\nimport Error from './components/error/error';\r\nimport './scss/app.sass';\r\n\r\nconst App = () => {\r\n  const handleRefreshNews = useNews();\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/hacker-news-avito/\" exact>\r\n            <Title title=\"Top News\" handleRefreshNews={handleRefreshNews} />\r\n            <ItemList />\r\n          </Route>\r\n          <Route path=\"/item/:id\" component={SingleNewsItem} />\r\n          <Error />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  LOAD_NEWS_FAILURE,\n  LOAD_NEWS_START,\n  LOAD_NEWS_SUCCESS\n} from '../actions/types';\n\nconst initialState = {\n  news: {},\n  loading: false,\n  isFail: false\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_NEWS_START:\n      return {\n        ...state,\n        loading: true,\n        isFail: false\n      };\n    case LOAD_NEWS_SUCCESS: {\n      const itemsObject = {};\n      for (let i = 0; i < action.payload.length; i++) {\n        itemsObject[action.payload[i].id.toString()] = action.payload[i];\n      }\n      return {\n        loading: false,\n        isFail: false,\n        news: {\n          ...itemsObject\n        }\n      };\n    }\n\n    case LOAD_NEWS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        isFail: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;\n","import {\n  LOAD_COMMENTS_SUCCESS,\n  LOAD_NEWS_ITEM_FAILURE,\n  LOAD_COMMENTS_FAILURE,\n  LOAD_NEWS_ITEM_SUCCESS\n} from '../actions/types';\n\nconst initialState = {\n  newsItems: {},\n  comments: {},\n\n  isItemsFailed: false,\n  isCommentsFailed: false\n};\n\nconst newsItemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_NEWS_ITEM_SUCCESS:\n      return {\n        ...state,\n        isItemsFailed: false,\n        isCommentsFailed: false,\n        newsItems: {\n          ...state.newsItems,\n          [action.payload.id]: {\n            item: action.payload\n          }\n        }\n      };\n\n    case LOAD_NEWS_ITEM_FAILURE:\n      return {\n        ...state,\n        isItemsFailed: true\n      };\n\n    case LOAD_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        isCommentsFailed: false,\n        comments: {\n          ...state.comments,\n          [action.payload.id]: action.payload.item\n        }\n      };\n\n    case LOAD_COMMENTS_FAILURE:\n      return {\n        ...state,\n        isCommentsFailed: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsItemReducer;\n","import { combineReducers } from 'redux';\nimport newsReducer from './news';\nimport newsItemReducer from './news-item';\n\nconst rootReducer = combineReducers({\n  newsReducer,\n  newsItemReducer\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root-reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}